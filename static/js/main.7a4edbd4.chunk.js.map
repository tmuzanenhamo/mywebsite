{"version":3,"sources":["Images/image22.jpg","Images/image3.jpg","Images/Me.jpg","Components/MyNavbar.js","Components/Header.js","Components/About.js","Components/Pages/NotFound.js","Components/butter-client.js","Components/PostSnippet.js","Components/Blog.js","Components/Contact.js","Components/Post.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","MyNavbar","class","to","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","Component","Header","src","image3","alt","landingData","map","details","name","About","myFace","aboutData","data","className","surname","bio","butter","Butter","PostSnippet","props","author","profile_image","pathname","slug","state","title","summary","first_name","last_name","moment","published","format","Blog","useState","loading","setLoading","error","setError","setData","useEffect","a","async","post","list","page","page_size","response","message","fetchPosts","i","key","Contact","subject","email","onChange","e","setState","target","value","onSubmit","preventDefault","templateParams","from_name","to_name","message_html","emailjs","resetForm","this","Form","FormGroup","controlId","Label","Input","placeholder","Button","variant","Post","location","dangerouslySetInnerHTML","__html","body","App","exact","path","component","render","NotFound","Boolean","window","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7a4edbd4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/image22.e2117f2e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/image3.5dc5dfbe.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Me.6d4a4c1a.jpg\";","import React, { Component } from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\n\r\n\r\nclass MyNavbar extends Component {\r\n  render() {\r\n    return (\r\n\r\n <div class=\"container\">\r\n<nav class=\"navbar navbar-expand-lg fixed-top navbar-light\">\r\n  <Link class=\"navbar-brand\" to=\"/\">Tawanda</Link>\r\n  <button class=\"navbar-toggler \" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n    <span class=\"navbar-toggler-icon\"></span>\r\n  </button>\r\n\r\n  <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n    <ul class=\"navbar-nav ml-auto\">\r\n      <li class=\"nav-item active\">\r\n        <Link class=\"nav-link\" to=\"/\"> Home <span class=\"sr-only\">(current)</span></Link>\r\n      </li>\r\n      <li class=\"nav-item\">\r\n        <Link class=\"nav-link\" to=\"/About\">About</Link>\r\n      </li>\r\n      <li class=\"nav-item\">\r\n        <Link class=\"nav-link\" to=\"/Blog\">Blog</Link>\r\n      </li>\r\n      <li class=\"nav-item\">\r\n        <Link class=\"nav-link\" to=\"/Projects\">Projects</Link>\r\n      </li>\r\n      <li class=\"nav-item\">\r\n        <Link class=\"nav-link\" to=\"/Contact\">Contact</Link>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n</nav>\r\n\r\n</div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MyNavbar;\r\n","import React, { Component } from 'react';\r\nimport image3 from '../Images/image3.jpg';\r\nimport '../App.css';\r\nimport landingData from '../data/Data.json';\r\n\r\n\r\n\r\nexport default class Header extends Component {\r\n  render() {\r\n    \r\n    return (\r\n\r\n      <div class = 'card' >  \r\n      <img src= {image3} alt=\"Logo\"/>\r\n      <div class=\"card-body\">\r\n      <div class=\"centered\">\r\n\r\n        {landingData.map((details)=> {\r\n\r\n          return <h1> Hi I'm {details.name} Muzanenhamo</h1>\r\n        })}\r\n        <p>I'm an Electrical and Computer Engineering graduate from the renowned University of Cape Town </p>\r\n\r\n      </div>\r\n\r\n      </div>\r\n      \r\n      </div>\r\n     \r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport myFace from '../Images/image22.jpg'\r\nimport '../App.css';\r\nimport aboutData from '../data/Data.json';\r\n\r\n\r\nconst About = () => {\r\nreturn (\r\n  <div class=\"wine-row\">\r\n    <img src={myFace} alt=\"\"></img>\r\n    <div class=\"wine-text-container\">\r\n    {aboutData.map((data)=> {\r\n        return (\r\n        <div>\r\n        <h1 className ='heading'>{data.name} {data.surname}</h1>\r\n        <br></br>\r\n        <p className =\"p\">{data.bio} </p>\r\n        </div>\r\n            )\r\n          }\r\n       )\r\n    }     \r\n    </div>\r\n</div>\r\n\r\n);\r\n}\r\n\r\nexport default About;","import React from 'react';\r\n\r\nexport default () => {\r\n  return (\r\n    <div>\r\n\r\n        <h1 className=\"display-4\"><span className=\"text-danger\">404 </span>NOT FOUND</h1>\r\n        <p>Sorry I'm getting it fixed</p>\r\n      \r\n    </div>\r\n  );\r\n}\r\n","import Butter from 'buttercms';\r\n\r\nconst butter = Butter('0ba8907ca06e87ef632cffe6981ba5e9ce29ada1');\r\n\r\nexport default butter;","import React from 'react';\r\nimport moment from 'moment';\r\nimport {Link} from 'react-router-dom';\r\nimport image3 from '../Images/Me.jpg';\r\n\r\nconst PostSnippet = props => {\r\n    const data = props.author.profile_image;\r\n  return (\r\n    <div className=\"post-snippet\">\r\n      <h3> \r\n      <Link to={{\r\n          pathname: `/blog/${props.slug}`,\r\n          state: props\r\n        }}>\r\n          {props.title} </Link></h3>\r\n\r\n          <img src ={data} alt=\"\"/>\r\n      <p>{props.summary}</p>\r\n      <div>\r\n        <div>By <strong>{props.author.first_name} {props.author.last_name}</strong></div>\r\n        \r\n        <span className=\"publication-date\">\r\n          Published on \r\n          {' '}\r\n          {moment(props.published).format(\"YYYY-MM-DD\")}\r\n        </span>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PostSnippet;","import React, { useState, useEffect }  from 'react';\r\nimport butter from './butter-client';\r\nimport PostSnippet from './PostSnippet';\r\nimport '../App.css';\r\n\r\n\r\nconst Blog = () => {\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(false);\r\n  const [data, setData] = useState(null);\r\n  const fetchPosts = async () => {\r\n    setLoading(true);\r\n    setError(false);\r\n    try {\r\n      const response = await butter.post.list({\r\n        page: 1, \r\n        page_size: 10\r\n      });\r\n      setData(response.data);\r\n    } catch(e) {\r\n      setError(`There was an error: ${e.message}`);\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchPosts();\r\n  }, []);\r\n\r\n  const getPosts = () => (\r\n    <div>\r\n      {data.data.map((post, i) => (\r\n        <PostSnippet {...post} key={i} />\r\n      ))}\r\n    </div>\r\n  );\r\n\r\n  const getContent = () => {\r\n    if ( loading ) return <p>Fetching posts...</p>;\r\n    if ( error ) return <p>{error}</p>;\r\n    if ( !data ) return null;\r\n    return getPosts();\r\n  }\r\n\r\n  return (\r\n    <div>\r\n       <div class = 'card' >  \r\n      <div class=\"card-body\">\r\n      <div class=\"centered\"></div>\r\n      <h1 className=\"blog-h\">Welcome to my Blog</h1>\r\n      {getContent()}\r\n    </div>\r\n    </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Blog;","import React, { Component } from 'react';\r\nimport * as emailjs from 'emailjs-com';\r\nimport { Button, FormFeedback, Form, FormGroup, Label, Input } from 'reactstrap';\r\nimport myFace from '../Images/image22.jpg'\r\n\r\nclass Contact extends Component {\r\n\r\n    state = {\r\n\r\n        name: '',\r\n        subject: '',\r\n        email: '',\r\n        message: ''\r\n\r\n\r\n    }\r\n\r\n    onChange = (e) => this.setState( {\r\n\r\n        [e.target.name]: e.target.value\r\n    });\r\n\r\n    onSubmit = (e) => {\r\n\r\n        e.preventDefault();\r\n\r\n        const { name, email, subject, message } = this.state\r\n        let templateParams = {\r\n            from_name: email,\r\n            to_name: 'tawasdev@gmail.com',\r\n            subject: subject,\r\n            message_html: message,\r\n           }\r\n\r\n           emailjs.send(\r\n            'gmail',\r\n            'template_pryDoQAO',\r\n             templateParams,\r\n            'user_Oj5ZGLSxIsYM8WagnxPBt'\r\n           )\r\n\r\n           this.resetForm()\r\n        \r\n    };\r\n\r\n    resetForm() {\r\n        this.setState({\r\n          name: '',\r\n          email: '',\r\n          subject: '',\r\n          message: '',\r\n        })\r\n      }\r\n  render() {\r\n\r\n    const {name, subject, email, message} = this.state;\r\n    return (\r\n\r\n    <div class=\"wine-row\">\r\n        <div class=\"wine-text-container\">\r\n        <h1 className=\"p-heading1\">Get in Touch</h1>\r\n          <Form onSubmit={this.onSubmit}>\r\n            <FormGroup controlId=\"formBasicEmail\">\r\n              <Label className=\"text-muted\">Email address</Label>\r\n              <Input\r\n                type=\"email\"\r\n                name=\"email\"\r\n                value={email}\r\n                className=\"text-primary\"\r\n                onChange={this.onChange}\r\n                placeholder=\"Enter email\"\r\n              />\r\n            </FormGroup>\r\n<FormGroup controlId=\"formBasicName\">\r\n              <Label className=\"text-muted\">Name</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"name\"\r\n                value={name}\r\n                className=\"text-primary\"\r\n                onChange={this.onChange}\r\n                placeholder=\"Name\"\r\n              />\r\n            </FormGroup>\r\n<FormGroup controlId=\"formBasicSubject\">\r\n              <Label className=\"text-muted\">Subject</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"subject\"\r\n                className=\"text-primary\"\r\n                value={subject}\r\n                onChange={this.onChange}\r\n                placeholder=\"Subject\"\r\n              />\r\n            </FormGroup>\r\n<FormGroup controlId=\"formBasicMessage\">\r\n              <Label className=\"text-muted\">Message</Label>\r\n              <Input\r\n                type=\"textarea\"\r\n                name=\"message\"\r\n                className=\"text-primary\"\r\n                value={message}\r\n                onChange={this.onChange}\r\n              />\r\n            </FormGroup>\r\n<Button variant=\"primary\" type=\"submit\">\r\n              Submit\r\n            </Button>\r\n          </Form>\r\n      </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Contact;\r\n","import React from 'react';\r\nimport moment from 'moment';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Post = props => {\r\n  const data = props.location.state;\r\n  return (\r\n    <div className=\"post\">\r\n      <h1>{data.title}</h1>\r\n      <hr />\r\n      <div className=\"author\">\r\n        <img src={data.author.profile_image} alt=\"Author\" />\r\n        <div>\r\n          Published by\r\n          {' '}\r\n          <strong>\r\n            {data.author.first_name} {data.author.last_name}\r\n          </strong>\r\n          {' '} on {' '}\r\n          {moment(data.published).format(\"MMMM Do, YYYY\")}\r\n        </div>\r\n      </div>\r\n      <hr />\r\n      <div dangerouslySetInnerHTML={{__html: data.body}} />\r\n      <hr />\r\n      <Link to=\"/blog\">&larr; Back to the posts list</Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Post;","import React from 'react';\nimport {HashRouter as Router, Route, Switch} from  'react-router-dom'\nimport './App.css';\nimport MyNavbar from './Components/MyNavbar';\nimport Header from './Components/Header';\nimport About from './Components/About';\nimport NotFound from './Components/Pages/NotFound';\nimport Blog from './Components/Blog';\n\nimport Contact from './Components/Contact';\nimport Post from './Components/Post';\n\n\n\n\nfunction App() {\n  return (\n\n    <Router>\n    <div className=\"App\">\n\n      <MyNavbar/>\n      <Switch>\n\n        <Route exact path =\"/\" component={Header}/>\n        <Route exact path =\"/About\" component={About}/>\n        <Route  exact path = \"/Blog\" component= {Blog}/>\n        <Route exact path= \"/Contact\" component={Contact}/>\n        <Route path=\"/blog/:slug\" render={Post} />\n        <Route component={NotFound}/>\n\n      </Switch>\n    </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n//import './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '../node_modules/font-awesome/css/font-awesome.min.css';\n\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}